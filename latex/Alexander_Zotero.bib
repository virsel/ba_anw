@misc{Chen2023,
  title = {Automatic {{Root Cause Analysis}} via {{Large Language Models}} for {{Cloud Incidents}}},
  author = {Chen, Yinfang and Xie, Huaibing and Ma, Minghua and Kang, Yu and Gao, Xin and Shi, Liu and Cao, Yunjie and Gao, Xuedong and Fan, Hao and Wen, Ming and Zeng, Jun and Ghosh, Supriyo and Zhang, Xuchao and Zhang, Chaoyun and Lin, Qingwei and Rajmohan, Saravan and Zhang, Dongmei and Xu, Tianyin},
  year = {2023},
  month = nov,
  number = {arXiv:2305.15778},
  eprint = {2305.15778},
  primaryclass = {cs},
  publisher = {arXiv},
  doi = {10.48550/arXiv.2305.15778},
  urldate = {2024-12-19},
  abstract = {Ensuring the reliability and availability of cloud services necessitates efficient root cause analysis (RCA) for cloud incidents. Traditional RCA methods, which rely on manual investigations of data sources such as logs and traces, are often laborious, error-prone, and challenging for on-call engineers. In this paper, we introduce RCACopilot, an innovative on-call system empowered by the large language model for automating RCA of cloud incidents. RCACopilot matches incoming incidents to corresponding incident handlers based on their alert types, aggregates the critical runtime diagnostic information, predicts the incident's root cause category, and provides an explanatory narrative. We evaluate RCACopilot using a real-world dataset consisting of a year's worth of incidents from Microsoft. Our evaluation demonstrates that RCACopilot achieves RCA accuracy up to 0.766. Furthermore, the diagnostic information collection component of RCACopilot has been successfully in use at Microsoft for over four years.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Software Engineering},
  file = {C:\Users\lahna\Zotero\storage\CUKLH3BD\Chen et al. - 2023 - Automatic Root Cause Analysis via Large Language M.pdf}
}

@misc{Dragoni2017,
  title = {Microservices: {{Migration}} of a {{Mission Critical System}}},
  shorttitle = {Microservices},
  author = {Dragoni, Nicola and Dustdar, Schahram and Larsen, Stephan T. and Mazzara, Manuel},
  year = {2017},
  month = apr,
  number = {arXiv:1704.04173},
  eprint = {1704.04173},
  primaryclass = {cs},
  publisher = {arXiv},
  doi = {10.48550/arXiv.1704.04173},
  urldate = {2024-12-20},
  abstract = {The microservices paradigm aims at changing the way in which software is perceived, conceived and designed. One of the foundational characteristics of this new promising paradigm, compared for instance to monolithic architectures, is scalability. In this paper, we present a real world case study in order to demonstrate how scalability is positively affected by reimplementing a monolithic architecture into microservices. The case study is based on the FX Core system, a mission critical system of Danske Bank, the largest bank in Denmark and one of the leading financial institutions in Northern Europe.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Software Engineering},
  file = {C:\Users\lahna\Zotero\storage\93GEDY6L\Dragoni et al. - 2017 - Microservices Migration of a Mission Critical Sys.pdf}
}

@book{Newman2019,
  title = {Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith},
  shorttitle = {Monolith to Microservices},
  author = {Newman, Sam},
  year = {2019},
  edition = {First edition},
  publisher = {O'Reilly Media, Inc},
  address = {Beijing [China] ; Sebastopol, CA},
  isbn = {978-1-4920-4784-1},
  lccn = {QA76.76.A65 N458 2019},
  keywords = {Application software,Computer architecture,Computer software,Development,Distributed operating systems (Computers),Software patterns},
  file = {C:\Users\lahna\Zotero\storage\RMBE2KCX\Newman - Monolith to Microservices.pdf}
}

@misc{Pham2024,
  title = {Root {{Cause Analysis}} for {{Microservice System}} Based on {{Causal Inference}}: {{How Far Are We}}?},
  shorttitle = {Root {{Cause Analysis}} for {{Microservice System}} Based on {{Causal Inference}}},
  author = {Pham, Luan and Ha, Huong and Zhang, Hongyu},
  year = {2024},
  month = sep,
  number = {arXiv:2408.13729},
  eprint = {2408.13729},
  primaryclass = {cs},
  publisher = {arXiv},
  doi = {10.48550/arXiv.2408.13729},
  urldate = {2024-12-19},
  abstract = {Microservice architecture has become a popular architecture adopted by many cloud applications. However, identifying the root cause of a failure in microservice systems is still a challenging and timeconsuming task. In recent years, researchers have introduced various causal inference-based root cause analysis methods to assist engineers in identifying the root causes. To gain a better understanding of the current status of causal inference-based root cause analysis techniques for microservice systems, we conduct a comprehensive evaluation of nine causal discovery methods and twentyone root cause analysis methods. Our evaluation aims to understand both the effectiveness and efficiency of causal inference-based root cause analysis methods, as well as other factors that affect their performance. Our experimental results and analyses indicate that no method stands out in all situations; each method tends to either fall short in effectiveness, efficiency, or shows sensitivity to specific parameters. Notably, the performance of root cause analysis methods on synthetic datasets may not accurately reflect their performance in real systems. Indeed, there is still a large room for further improvement. Furthermore, we also suggest possible future work based on our findings.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Software Engineering},
  file = {C:\Users\lahna\Zotero\storage\J46EGCS4\Pham et al. - 2024 - Root Cause Analysis for Microservice System based .pdf}
}

@article{Soldani2018,
  title = {The Pains and Gains of Microservices: {{A Systematic}} Grey Literature Review},
  shorttitle = {The Pains and Gains of Microservices},
  author = {Soldani, Jacopo and Tamburri, Damian Andrew and Van Den Heuvel, Willem-Jan},
  year = {2018},
  month = dec,
  journal = {Journal of Systems and Software},
  volume = {146},
  pages = {215--232},
  issn = {01641212},
  doi = {10.1016/j.jss.2018.09.082},
  urldate = {2024-12-20},
  langid = {english},
  file = {C:\Users\lahna\Zotero\storage\4LIZ6IIQ\Soldani et al. - 2018 - The pains and gains of microservices A Systematic.pdf}
}

@article{Thones2015,
  title = {Microservices},
  author = {Th{\"o}nes, Johannes},
  year = {2015},
  month = jan,
  journal = {IEEE Software},
  volume = {32},
  number = {1},
  pages = {116--116},
  issn = {1937-4194},
  doi = {10.1109/MS.2015.11},
  urldate = {2024-12-20},
  abstract = {In this excerpt from Software Engineering Radio, Johannes Th{\"o}nes talks with James Lewis, principal consultant at ThoughtWorks, about microservices. They discuss microservices' recent popularity, architectural styles, deployment, size, technical decisions, and consumer-driven contracts. They also compare microservices to service-oriented architecture and wrap up the episode by talking about key figures in the microservice community and standing on the shoulders of giants. The Web extra at http://www.se-radio.net/2014/10/episode-213-james-lewis-on-microservices is an audio recording of Tobias Kaatz speaking with James Lewis, principal consultant at ThoughtWorks, about microservices. They discuss microservices' recent popularity, architectural styles, deployment, size, technical decisions, and consumer-driven contracts. They also compare microservices to service-oriented architecture and wrap up the episode by talking about key figures in the microservice community and standing on the shoulders of giants.},
  keywords = {architecture,enterprise service bus,http,Interviews,microservice,SE Radio,Service oriented architecture,service-oriented architecture,Software architecture,software engineering,Software engineering},
  file = {C\:\\Users\\lahna\\Zotero\\storage\\QMT6RDRE\\Th√∂nes - 2015 - Microservices.pdf;C\:\\Users\\lahna\\Zotero\\storage\\Y392KS9L\\7030212.html}
}
